name: Build and Release Flutter App

on:
    workflow_dispatch:

jobs:
    build:
        name: Build Flutter App
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Set up Java
              uses: actions/setup-java@v3
              with:
                  java-version: "17"
                  distribution: "temurin"

            - name: Set up Flutter
              uses: subosito/flutter-action@v2
              with:
                  flutter-version: "3.29.1"

            - name: Generate firebase_options.dart
              run: |
                  mkdir -p Week-2/todo_getx/lib
                  cat <<EOF > Week-2/todo_getx/lib/firebase_options.dart
                  // Generated by GitHub Actions
                  import 'package:firebase_core/firebase_core.dart';

                  const FirebaseOptions firebaseOptions = FirebaseOptions(
                    apiKey: '${{ secrets.FIREBASE_API_KEY }}',
   
                    projectId: '${{ secrets.FIREBASE_PROJECT_ID }}',
                    storageBucket: '${{ secrets.FIREBASE_STORAGE_BUCKET }}',
                    messagingSenderId: '${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}',
                    appId: '${{ secrets.FIREBASE_APP_ID }}',
                  );
                  EOF
                #   authDomain: '${{ secrets.FIREBASE_AUTH_DOMAIN }}',
            - name: Install dependencies
              run: flutter pub get
              working-directory: Week-2/todo_getx

            - name: Build APK
              run: flutter build apk --release
              working-directory: Week-2/todo_getx

            # - name: Build AppBundle
            #   run: flutter build appbundle --release
            #   working-directory: Week-2/todo_getx

            # - name: Build macOS App
            #   if: runner.os == 'macOS'
            #   run: flutter build macos --release
            #   working-directory: Week-2/todo_getx

            # - name: Build Windows App
            #   if: runner.os == 'Windows'
            #   run: flutter build windows --release
            #   working-directory: Week-2/todo_getx

            - name: Upload Release Artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: flutter-build
                  path: |
                      Week-2/todo_getx/build/app/outputs/flutter-apk/app-release.apk
                    #   Week-2/todo_getx/build/app/outputs/bundle/release/app-release.aab
                    #   Week-2/todo_getx/build/macos/Build/Products/Release/*.app
                    #   Week-2/todo_getx/build/windows/runner/Release/*.exe

    release:
        name: Create GitHub Release
        needs: build
        runs-on: ubuntu-latest

        steps:
            - name: Download Artifacts
              uses: actions/download-artifact@v3
              with:
                  name: flutter-build

            - name: Create Release
              uses: ncipollo/release-action@v1
              with:
                  artifacts: |
                      app-release.apk
                    #   app-release.aab
                    #   *.app
                    #   *.exe
                  token: ${{ secrets.GITHUB_TOKEN }}
                  tag: ${{ github.ref_name }}
                  name: Release ${{ github.ref_name }}
                  body: |
                      Automated release for version ${{ github.ref_name }}.
